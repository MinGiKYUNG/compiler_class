#ifndef TOKEN_H
#define TOKEN_H

typedef enum {
    T_EOF = 0,
    T_ERROR,

    // 식별자/리터럴
    T_IDENT,     // [a-zA-Z_][a-zA-Z0-9_]*
    T_NUMBER,    // 0 | [1-9][0-9]*

    // 키워드 (예시)
    T_KW_INT, T_KW_RETURN, T_KW_IF, T_KW_ELSE, T_KW_WHILE,

    // 연산자/구분자
    T_PLUS, T_MINUS, T_MUL, T_DIV,
    T_ASSIGN,       // =
	T_GT,           // >
	T_LT,			// <
    T_SEMI,         // ;
    T_COMMA,        // ,
    T_LPAREN, T_RPAREN, // ( )
    T_LBRACE, T_RBRACE, // { }
} TokenType;

typedef struct {
    TokenType type;
    const char* lexeme; // 원본 버퍼 내 시작 포인터(소유 X)
    int length;         // lexeme 길이
    long long ival;     // 숫자일 때 값
    int line, col;      // 토큰 시작 위치
} Token;

const char* token_type_name(TokenType t);

#endif
